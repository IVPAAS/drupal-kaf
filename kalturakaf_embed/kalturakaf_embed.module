<?php
/**
 * @file
 * Includes all field hook implementations for the custom KalturaKaf field
 */
module_load_include('php', 'kalturakaf', 'kalturaClient/KalturaClient');
define('KALTURAKAF_BSE_URI', '/browseandembed/index/browseandembed');

// /%ctools_js/%
/**
 * Implements hook_menu().
 */
function kalturakaf_embed_menu() {
  $items['kalturakaf/embed'] = array(
    'title' => 'Select Video',
    'description' => t('Embed a video from KAF BSE'),
    'page callback' => 'kalturakaf_embed_load_bse',
    'access callback' => TRUE,
    'weight' => -10,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['kalturakaf/embed_result/field/%'] = array(
    'title' => 'get result',
    'description' => t('Embed a video from KAF BSE'),
    'page callback' => 'kalturakaf_embed_process_return',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'weight' => -10,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/***************************************************************
 * Field Type API hooks
 ***************************************************************/

/**
 * Implements hook_field_info().
 *
 * Provides the description of the field.
 */
function kalturakaf_embed_field_info() {
  return array(
    // We name our field as the associative name of the array.
    'kalturakaf_embedded' => array(
      'label' => t('Kaltura KAF Video'),
      'description' => t('Demonstrates a field composed of an embedded color.'),
      'default_widget' => 'kalturakaf_video_selector',
      'default_formatter' => 'kalturakaf_embedded_video',
    ),
  );
}

/**
 * Implements hook_field_validate().
 *
 * This hook gives us a chance to validate content that's in our
 * field. 
 *
 * @see kalturakaf_field_widget_error()
 */
function kalturakaf_embed_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  
}


/**
 * Implements hook_field_is_empty().
 *
 * hook_field_is_emtpy() is where Drupal asks us if this field is empty.
 * Return TRUE if it does not contain data, FALSE if it does. This lets
 * the form API flag an error when required fields are empty.
 */
function kalturakaf_embed_field_is_empty($item, $field) {
  return empty($item['embedded']);
}

/**
 * Implements hook_field_formatter_info().
 *
 * @see kalturakaf_embed_field_formatter_view()
 */
function kalturakaf_embed_field_formatter_info() {
  return array(
    // This formatter just displays the hex value in the color indicated.
    'kalturakaf_embedded_video' => array(
      'label' => t('Simple text-based formatter'),
      'field types' => array('kalturakaf_embedded'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * The formatter simply calls a separate function that renders the actual markup
 *
 * @see kalturakaf_field_formatter_info()
 */
function kalturakaf_embed_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    // This formatter simply outputs the field as text and with a color.
    case 'kalturakaf_embedded_video':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
            '#markup' => kalturakaf_embed_field_formatter_display_video($item),
        );
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_field_widget_info().
 *
 * A single widget is provided - link that loads the BSE KAF module in a modal window.
 *
 * @see kalturakaf_field_widget_form()
 */
function kalturakaf_embed_field_widget_info() {
  return array(
    'kalturakaf_video_selector' => array(
      'label' => t('Video Selector'),
      'field types' => array('kalturakaf_embedded'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 *
 * hook_widget_form() is where Drupal tells us to create form elements for
 * our field's widget.
 *
 */
function kalturakaf_embed_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  static $counter = 0;
  $counter++;
  $suffixContent = kalturakaf_embed_suffix_content($counter);
  $img = '';
    
  $value = isset($items[$delta]['embedded']) ? $items[$delta]['embedded'] : '';
  // handle bad post - display image

  if($value)
  {
      $unser = unserialize(base64_decode($value));
      if($unser)
      {
          $thumb = $unser['thumbnailUrl'];
          $img = '<img src="'.$thumb.'" width="120" height="90" class="kalturakaf-thumbnail-'.$counter.'"/>';
      }
  }
  
  $widget = $element;
  $widget['#delta'] = $delta;

  switch ($instance['widget']['type']) {

    case 'kalturakaf_video_selector':
      $widget += array(
        '#suffix' => '<div id="kalturakaf-selector-'.$counter.'">'.$suffixContent.'</div>'.$img,
        '#attributes' => array('class' => array('edit-kalturakaf-selector'), 'id' => 'kalturakaf-video-'.$counter),
        '#attached' => array(
          // Add javascript to trigger the colorpicker.
          'js' => array(
              drupal_get_path('module', 'kalturakaf') . '/kalturakaf.js',
          ),
        ),
      );
      $widget += array(
        '#type' => 'hidden',
        '#default_value' => $value,
        // Allow a slightly larger size that the field length to allow for some
        // configurations where all characters won't fit in input field.
        '#size' => 60,
        '#hidden' => true,
      );
      
      break;
  }

  $element['embedded'] = $widget;
  return $element;
}



/**
 * Implements hook_field_widget_error().
 *
 * hook_field_widget_error() lets us figure out what to do with errors
 * we might have generated in hook_field_validate(). Generally, we'll just
 * call form_error().
 *
 * @see kalturakaf_field_validate()
 * @see form_error()
 */
function kalturakaf_embed_field_widget_error($element, $error, $form, &$form_state) {
  switch ($error['error']) {
    case 'kalturakaf_invalid':
      form_error($element, $error['message']);
      break;
  }
}

/**
 * main function that handles the rendering of "select video" link
 * @return string
 */

function kalturakaf_embed_suffix_content($counter)
{
    $url = base_path().'kalturakaf/embed?instance='.$counter;
    $link = '<a href="' . $url . '" class="simple-dialog" rel="width:900;resizable:false;position:[center,60]" name="kalturakaf-video-selector-dialog" title="Select a Video">Select A Video</a>';
    return $link;
}

/**
 * Sicne it is implemented based on "simple modal" - there is an AJAX to a page from which some content is cloned into the modal.
 * This function outputs the contents of this page
 * 
 * @return string
 */
function kalturakaf_embed_load_bse()
{
    // preparing the full URL of the "returnUrl" parameter.
    // This is where BSE will POST back the user selection data to.
    $baseUri = 'kalturakaf/embed_result/field/kalturakaf-video-'.$_GET['instance'];
    $returnUrl = urlencode(url($baseUri, array('absolute' => TRUE)));

    // prepare privielges for the my-media page
    $privileges = array(
        'role' => 'privateOnlyRole',
        'returnUrl' => $returnUrl,
    );
    
    // use core function to generate frame URL including a KS
    $frameSrc = kalturakaf_get_frame_src(KALTURAKAF_BSE_URI, $privileges);
    
    // place code in page that uses the JS to load the iframe
    $content = '<div id="kalturakaf-video-selector-dialog"><div id="bse"></div>';
    $content .= '<input type="hidden" id="kaf_url" value="' .$frameSrc. '" /></div>';
    
    return $content;
}

/**
 * callback function for the "return URL" page
 * 
 * @param type $fieldId
 * @return string
 */
function kalturakaf_embed_process_return($fieldId)
{
    //serialize and encode the data to save into the DB as is
    $serialized = base64_encode(serialize($_POST));
    // output JS code to inject the value into the form
    $content = '<script>window.parent.kalturakaf.setFieldValue("'.
            $fieldId.'","'.$serialized.'", "'.$_POST['thumbnailUrl'].'"); </script>';
    return $content;
}

/**
 * callback function that is called to render the field when displayed in the site.
 * 
 * @param type $item
 * @return string
 */
function kalturakaf_embed_field_formatter_display_video($item)
{
    // unserialize the value from the DB
    $unser = unserialize(base64_decode($item['embedded']));
    
    // load the general JS that places iframe
    drupal_add_js(drupal_get_path('module', 'kalturakaf') . '/kalturakaf.js');
    
    // prepare privielges for the entry view page
    $privileges = array(
        'role' => 'viewerRole',
    );
    
    // use core function to generate frame URL including a KS
    $frameSrc = kalturakaf_get_frame_src($unser['url'], $privileges, true);
    // generate unique ID for each embdedded video in case of few fields in the same node
    $divId = 'video-'.$unser['entry_id'];
    
    // place code in page that uses the JS to load the iframe
    $content = '<div id="'.$divId.'"></div>';
    $content .= '<script>kalturakaf.load("'.$divId.'", "'.$frameSrc.'");</script>';
    
    return $content;
}